########## Jax Wang #########

# Github:https://github.com/jaxwang/loon-conf
# 此配置文件在Tartarus大佬的Loon_Lite.conf基础上修改
# 主要增加了策略组部分和分流规则 增加了网易云音乐解锁 增加了 Q-Search_All_in_one 重新整理了定时任务部分与http中间人脚本.
# 查看 Q-Search 使用文档:  https://raw.githubusercontent.com/Tartarus2014/Loon-Script/master/Q-Search_All_in_one.conf
# 引用源: https://raw.githubusercontent.com/Tartarus2014/Loon-Script/master/Loon_Lite.conf
# 导入配置后,之后进入「配置」> 「订阅节点」页面订阅里 左滑编辑「我的机场」中的 "url" 为自己的机场地址, 注意不要更改"我的机场"这个别名 , 之后更新订阅规则。

#############################
#
#
# 2020.10.28 19.00

# Loon全局配置 by Tartarus, 根据 CheeryTodo 配置改编。
# 作者GitHub： https://github.com/Tartarus2014
# 脚本库GitHub： https://github.com/Tartarus2014/Loon-Script
# Loon教程链接：https://github.com/chiupam/tutorial/blob/master/Loon/Plus/README.md
# Loon规则GitHub：https://github.com/blackmatrix7/ios_rule_script/tree/master/rule/Loon

# 导入配置后,之后进入「配置」> 「订阅节点」页面订阅里 左滑编辑「我的机场」中的 "url" 为自己的机场地址, 注意不要更改"我的机场"这个别名 , 之后更新订阅规则。

# 点击配置-证书管理-生成新的CA证书，之后进入「设置」>「通用」>「描述文件」, 安装Loon的证书, 并在「设置」>「通用」>「关于本机」>「证书信任设置」开启对Loon证书的信任。

# 开启并更新脚本和插件。

# 远程脚本中默认提供了Tartarus2014整理的订阅合集,需要使用的点启动即可
# 
# 全分组
# 去广告插件, VIP脚本, 签到, cookie,
# 带国际tiktok解锁 只能启动一个地区解锁 只保证UK能 其他地区不保证
# 云音乐解锁规则, 节点远程订阅, 默认直连, 可在策略组手动开启。
# =请使用 Safari 浏览器访问网站。首先下载 证书, 进入「设置」>「通用」>「描述文件」, 安装「UnblockNeteaseMusic Root CA」, 并在「设置」>「通用」>「关于本机」>「证书信任设置」开启对「UnblockNeteaseMusic Root CA」的信任。
# =证书链接：https://cdn.jsdelivr.net/gh/nondanee/UnblockNeteaseMusic@master/ca.crt


[General]
ipv6 = false
# > 跳过某个域名或者IP段
skip-proxy = 192.168.0.0/16,10.0.0.0/8,172.16.0.0/12,localhost,*.local,e.crashlynatics.com
bypass-tun = 10.0.0.0/8,100.64.0.0/10,127.0.0.0/8,169.254.0.0/16,172.16.0.0/12,192.0.0.0/24,192.0.2.0/24,192.88.99.0/24,192.168.0.0/16,198.18.0.0/15,198.51.100.0/24,203.0.113.0/24,224.0.0.0/4,255.255.255.255/32
dns-server = system,119.29.29.29,223.5.5.5

allow-udp-proxy = true
allow-wifi-access = true
wifi-access-http-port = 7222
wifi-access-socket5-port = 7221

proxy-test-url = http://www.gstatic.com/generate_204
test-timeout = 3
# 解析器
resource-parser = https://raw.githubusercontent.com/Peng-YM/Sub-Store/master/scripts/sub-store-parser.js

[Remote Proxy]
# 请修改我的机场为自己的机场地址
我的机场 = https://enter.yourairport.node
网易云解锁灰色歌曲 = https://git.io/JfNq3

[Proxy]
# 本地节点
# 内置 DIRECT、REJECT 策略
# 节点名称 = 协议, 服务器地址, 服务器端口, 加密协议, 密码, 
# vmess
# 节点名称 = 协议, 服务器地址, 端口, 加密方式, UUID, 传输方式:(tcp/ws),path：websocket握手header中的path, host：websocket握手header中的path, over-tls:是否tls, tls-name：远端w服务器域名, skip-cert-verify：是否跳过证书校验（默认否）
#5 = vmess, 1.2.3.4, 10086, aes-128-gcm,”uuid“,transport:ws,path:/,host:icloud.com,over-tls:true,tls-name:youtTlsServerName.com,skip-cert-verify:false


[Proxy Group]
FINAL = select,PROXY,DIRECT
PROXY = select,自动选择,手动选择
手动选择 = select,机场节点
自动选择 = url-test,机场节点,url = http://www.gstatic.com/generate_204,interval = 600,tolerance = 100
YouTube = select,PROXY,自动选择,手动选择,DIRECT
Netflix = select,PROXY,自动选择,手动选择,机场节点,DIRECT
Telegram = select,PROXY,自动选择,手动选择,DIRECT
苹果服务 = select,DIRECT,PROXY,自动选择,手动选择
网易云音乐 = select,DIRECT,网易云音乐解锁节点,PROXY,自动选择,手动选择

[Remote Filter]
机场节点 = NameRegex,我的机场, FilterKey = "(.*)"
Others = NameRegex,我的机场, FilterKey = "^(?!.*v2jax)"
网易云音乐解锁节点 = NameRegex, 网易云解锁灰色歌曲,  FilterKey = "(.*)"

[Remote Rule]
https://raw.githubusercontent.com/lhie1/Rules/master/Surge/Surge%203/Provider/Reject.list, policy=REJECT, tag=去广告, enabled=true

https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/release/rule/Loon/TestFlight/TestFlight.list, policy=PROXY, tag=Testflingt, enabled=true

https://raw.githubusercontent.com/lhie1/Rules/master/Surge/Surge%203/Provider/Apple.list, policy=苹果服务, tag=苹果服务, enabled=true

https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/release/rule/Loon/YouTube/YouTube.list, policy=YouTube, tag=YouTube, enabled=true

https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/release/rule/Loon/Netflix/Netflix.list, policy=Netflix, tag=Netflix, enabled=true

https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/release/rule/Loon/GlobalMedia/GlobalMedia.list, policy=PROXY, tag=国外媒体, enabled=true

https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/release/rule/Loon/Telegram/Telegram.list, policy=Telegram, tag=Telegram, enabled=true

https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/release/rule/Loon/Bilibili/Bilibili.list, policy=DIRECT, tag=B站, enabled=true

https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Proxy/Domain.list, policy=PROXY, tag=全球加速, enabled=true

https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/release/rule/Loon/China/China.list, policy=DIRECT, tag=中国直连, enabled=true

[Rule]
DOMAIN, rsshub.app, PROXY

GEOIP,CN,DIRECT
FINAL,FINAL

[URL Rewrite]
enable = false

[Remote Rewrite]
https://raw.githubusercontent.com/Tartarus2014/Loon-Script/master/Q-Search_All_in_one.conf,Q-Search_All_in_one

[Script]
enable = false

[Remote Script]
https://raw.githubusercontent.com/Tartarus2014/Loon-Script/master/Cookie.conf, tag=Cookie【获取完一定要关闭】, enabled=false
https://raw.githubusercontent.com/jaxwang/loon-conf/main/script/crontab.conf, tag=Crontab, enabled=false
https://raw.githubusercontent.com/jaxwang/loon-conf/main/script/http-mitm.conf, tag=HTTP-MITM, enabled=false

[Plugin]
https://raw.githubusercontent.com/Tartarus2014/Loon-Script/master/Plugin/Host.plugin, tag=Host, enabled=false
https://raw.githubusercontent.com/Tartarus2014/Loon-Script/master/Plugin/Block/Advertising.plugin, proxy=REJECT, tag=Advertising, enabled=false
https://raw.githubusercontent.com/Tartarus2014/Loon-Script/master/Plugin/General.plugin, tag=General, enabled=false
https://gitee.com/chavyleung/scripts/raw/master/box/rewrite/boxjs.rewrite.loon.tf.plugin, tag=Boxjs, enabled=false
https://raw.githubusercontent.com/Peng-YM/Sub-Store/master/config/Loon.plugin, tag=订阅解析器, enabled=false
https://raw.githubusercontent.com/Tartarus2014/Loon-Script/master/Plugin/Netease%20Music.plugin, proxy=网易云音乐, tag=网易云音乐, enabled=false

[MITM]
enable = false
skip-server-cert-verify = true
